<?php
/**
 * LoginApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * {descrb}
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * LoginApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class LoginApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for authViaFacebookApiV1LoginAuthFacebookGet
     *
     * Auth Via Facebook.
     *
     */
    public function testAuthViaFacebookApiV1LoginAuthFacebookGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for authViaGoogleApiV1LoginAuthGoogleGet
     *
     * Auth Via Google.
     *
     */
    public function testAuthViaGoogleApiV1LoginAuthGoogleGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for authViaLinkedinApiV1LoginAuthLinkedinGet
     *
     * Auth Via Linkedin.
     *
     */
    public function testAuthViaLinkedinApiV1LoginAuthLinkedinGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for disableTotpAuthenticationApiV1LoginTotpDelete
     *
     * Disable Totp Authentication.
     *
     */
    public function testDisableTotpAuthenticationApiV1LoginTotpDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for enableTotpAuthenticationApiV1LoginTotpPut
     *
     * Enable Totp Authentication.
     *
     */
    public function testEnableTotpAuthenticationApiV1LoginTotpPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for loginViaFacebookApiV1LoginFacebookGet
     *
     * Login Via Facebook.
     *
     */
    public function testLoginViaFacebookApiV1LoginFacebookGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for loginViaGoogleApiV1LoginGoogleGet
     *
     * Login Via Google.
     *
     */
    public function testLoginViaGoogleApiV1LoginGoogleGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for loginViaLinkedinApiV1LoginLinkedinGet
     *
     * Login Via Linkedin.
     *
     */
    public function testLoginViaLinkedinApiV1LoginLinkedinGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for loginWithMagicLinkApiV1LoginMagicEmailGet
     *
     * Login With Magic Link.
     *
     */
    public function testLoginWithMagicLinkApiV1LoginMagicEmailGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for loginWithOauth2ApiV1LoginOauthPost
     *
     * Login With Oauth2.
     *
     */
    public function testLoginWithOauth2ApiV1LoginOauthPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for loginWithTotpApiV1LoginTotpPost
     *
     * Login With Totp.
     *
     */
    public function testLoginWithTotpApiV1LoginTotpPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for recoverPasswordApiV1LoginRecoverEmailPost
     *
     * Recover Password.
     *
     */
    public function testRecoverPasswordApiV1LoginRecoverEmailPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for refreshTokenApiV1LoginRefreshPost
     *
     * Refresh Token.
     *
     */
    public function testRefreshTokenApiV1LoginRefreshPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for registerApiV1LoginSignInPost
     *
     * Register.
     *
     */
    public function testRegisterApiV1LoginSignInPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resetPasswordApiV1LoginResetPost
     *
     * Reset Password.
     *
     */
    public function testResetPasswordApiV1LoginResetPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for revokeTokenApiV1LoginRevokePost
     *
     * Revoke Token.
     *
     */
    public function testRevokeTokenApiV1LoginRevokePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for validateMagicLinkApiV1LoginClaimPost
     *
     * Validate Magic Link.
     *
     */
    public function testValidateMagicLinkApiV1LoginClaimPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for verifyRecaptchaEndpointApiV1LoginVerifyRecaptchaPost
     *
     * Verify Recaptcha Endpoint.
     *
     */
    public function testVerifyRecaptchaEndpointApiV1LoginVerifyRecaptchaPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
